---
- name: Validate variables.
  ansible.builtin.assert:
    that:
      - app_migrate_private_key | length > 0
      - app_migrate_remote_path | length > 0
      - app_migrate_remote_host | length > 0
      - app_migrate_remote_user | length > 0
      - app_migrate_remote_port | string | length > 0

- name: Create SSH directory.
  ansible.builtin.file:
    path: "{{ app_home }}/.ssh"
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: "0700"
    state: directory

- name: Create migrate_key file.
  ansible.builtin.copy:
    dest: "{{ app_home }}/.ssh/migrate_key"
    content: "{{ app_migrate_private_key }}\n"
    mode: "0600"

- name: Add pull host to SSH config.
  ansible.builtin.blockinfile:
    path: "{{ app_home }}/.ssh/config"
    marker: "# {mark} Pull Config"
    create: true
    mode: "0644"
    block: |
      Host pull-host
        Hostname {{ app_migrate_remote_host }}
        User {{ app_migrate_remote_user }}
        Port {{ app_migrate_remote_port }}
        IdentityFile {{ app_home }}/.ssh/migrate_key
        StrictHostKeyChecking no

- name: Export remote WordPress database.
  ansible.builtin.command: "wp --ssh=pull-host --path={{ app_migrate_remote_path }} --allow-root db export {{ app_migrate_remote_path }}/export.sql"
  register: result
  changed_when: "'Success' in result.stdout"
  when: app_migrate_wp

- name: Pull remote files.
  ansible.builtin.command: "rsync -chavzP --no-links --delete --stats pull-host:{{ app_migrate_remote_path }}/ {{ app_files_path }}"
  register: result
  changed_when: "'receiving incremental file list' in result.stdout"

- name: Fix file permissions.
  ansible.builtin.command: "{{ item }}"
  loop:
    - find {{ app_files_path }} -type f -exec chmod 644 {} +
    - find {{ app_files_path }} -type d -exec chmod 755 {} +
  changed_when: ''

- name: Configure WordPress.
  when: app_migrate_wp
  block:
    - name: Update WordPress configuration.
      ansible.builtin.command: "wp --path={{ app_files_path }} config set {{ item }}"
      loop:
        - "DB_HOST 'localhost'"
        - "DB_NAME '{{ app_mysql_database }}'"
        - "DB_USER '{{ app_mysql_user }}'"
        - "DB_PASSWORD '{{ app_mysql_password }}'"
      register: result
      changed_when: "'Success' in result.stdout"

    - name: Import WordPress database.
      ansible.builtin.command: "wp --path={{ app_files_path }} db import {{ app_files_path }}/export.sql"
      register: result
      changed_when: "'Success' in result.stdout"

    - name: Replace WordPress URL in database.
      ansible.builtin.command: "wp --path={{ app_files_path }} option get siteurl"
      register: remote_url
      when: app_migrate_replace_url
      changed_when: remote_url.stdout

    - name: Replace WordPress URL in database.
      ansible.builtin.command: "wp --path={{ app_files_path }} search-replace {{ remote_url.stdout }} {{ app_migrate_replace_url }}"
      when: app_migrate_replace_url
      register: result
      changed_when: "'Success' in result.stdout"

    - name: Optimize WordPress database.
      ansible.builtin.command: "wp --path={{ app_files_path }} db optimize"
      register: result
      changed_when: "'Success' in result.stdout"

- name: Ensure export.sql file is removed.
  ansible.builtin.file:
    path: "{{ app_files_path }}/export.sql"
    state: absent
